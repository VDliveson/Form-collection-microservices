version: '3'

services:
  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - services_network

  producer1:
    container_name: atlan-producer1
    build:
      context: ./producer
      dockerfile: Dockerfile
    networks:
      - services_network
    depends_on:
      - rabbitmq
    environment:
      - PORT=3000  # Use the same port for both producer instances
      - RABBITMQ=amqp://rabbitmq:5672
    ports:
      - '3000:3000'  # Map container port 3000 to host port 3000

  producer2:
    container_name: atlan-producer2
    build:
      context: ./producer
      dockerfile: Dockerfile
    networks:
      - services_network
    depends_on:
      - rabbitmq
    environment:
      - PORT=3000  # Use the same port for both producer instances
      - RABBITMQ=amqp://rabbitmq:5672
    ports:
      - '3001:3000'  # Map container port 3000 to host port 3001

  sheets-service:
    container_name: atlan-sheets-service
    build:
      context: ./google-sheets-service
      dockerfile: Dockerfile
    networks:
      - services_network
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ=amqp://rabbitmq:5672

  sms-service:
    container_name: atlan-sms-service
    build:
      context: ./sms-service
      dockerfile: Dockerfile
    networks:
      - services_network
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ=amqp://rabbitmq:5672

  validation-service:
    container_name: validation-service
    build:
      context: ./validation-service
      dockerfile: Dockerfile
    networks:
      - services_network
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ=amqp://rabbitmq:5672

  slangs-service:
    container_name: atlan-slangs-service
    build:
      context: ./slangs-service
      dockerfile: Dockerfile
    networks:
      - services_network
    depends_on:
     - rabbitmq
    environment:
    - RABBITMQ=amqp://rabbitmq:5672

  nginx:
    container_name: atlan-nginx
    build: ./nginx
    ports:
      - '80:80'
    networks:
      - services_network
    depends_on:
      - producer1
      - producer2

networks:
  services_network:
    driver: bridge
